@model PROJECT.Core.Models.ViewModels.RegistrationUpdateViewModel

@{
    ViewBag.Title = "Profile Edit";

}


<br />
<br />

<div class="panel panel-info">
    <div class="panel-heading">
        <h3 class="panel-title">Profile Edit</h3>
    </div>
    <div class="panel-body">





        <!-- put your content here -->
        @using (Html.BeginForm("ProfileEdit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">


                @Html.ValidationSummary(false, "", new { @class = "text-danger" })


                <div class="form-group required">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name" } })

                    </div>
                </div>
                <div class="form-group required">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-3" })

                    <div class="col-md-9">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name" } })

                    </div>
                </div>
                <div class="form-group required">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group required">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EnumDropDownListFor(model => model.Gender, "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group required">
                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-3 " })
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.DateOfBirth, new { @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group required">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.UploadPhoto, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">


                        <div class="input-group">
                            <span class="input-group-btn">
                                <span class="btn btn-default btn-file">
                                    @Html.HiddenFor(m => m.PhotoName)
                                    Browse&hellip;   @Html.TextBoxFor(m => m.UploadPhoto, new { type = "file", style = "max-width: 200px;" })
                                </span>
                            </span>
                            <input type="text" class="form-control" readonly>
                        </div>



                    </div>
                    @Html.ValidationMessageFor(model => model.UploadPhoto, "", new { @class = "text-danger" })

                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
