@model PROJECT.Core.Models.ViewModels.RoleViewModel
@using PROJECT.Core.Helpers;
@{
    ViewBag.Title = "Role Edit";

}




<div class="row">
    <div class="box col-md-12">
        <div class="box-inner">
            <div class="box-header well" data-original-title="">
                <h2><i class="glyphicon glyphicon-user"></i>Role Edit</h2>

            </div>
            <div class="box-content">
                <!-- put your content here -->
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group required">
                            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group required">
                            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group required">
                            @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group required">
                            @Html.LabelFor(model => model.RoleStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.RoleStatus, "---Select---", new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RoleStatus, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Save" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
                @if (ApplicationHelpers.CheckRoleUserAccess(ActionUserAccessEnum.AdminOnly))
                {
                    <div>
                        <a class="btn btn-success" href="@Url.Action("Index")">
                            <i class="glyphicon glyphicon-list-alt">
                            </i>
                            Back to List
                        </a>
                       
                        @*@Html.ActionLink("Back to List", "Index")*@
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
